autotools
+++++++++
Autotools ile derleme yapmak için önce **./configure** kullanılır. ardından **make** ile derlenir.
Son olarak **make install** ile kurulur.

.. code-block:: shell

	$ ./configure --prefix=/usr
	$ make
	$ make install

Eğer configure dosyası yerine **configure.ac** varsa önce **autoreconf -fvi** çalıştırılmalıdır. Bu komut configure dosyamızı üretir.

Örneğin aşağıdaki gibi bir C dosyamız olsun:

.. code-block:: C

	#include <stdio.h>
	int main(){
	    puts("Hello World");
	    return 0;
	}

configure.ac dosyamızın içeriği aşağıdaki gibi olsun:

.. code-block:: C

	# initialize the process
	AC_INIT([hello], [0.01])
	# make config headers
	AC_CONFIG_HEADERS([config.h])
	#Auxiliary files go here
	AC_CONFIG_AUX_DIR([build-aux])
	# init automake
	AM_INIT_AUTOMAKE([1.11])
	#configure and create "Makefile"
	AC_CONFIG_FILES([Makefile])
	#find and probe C compiler
	AC_PROG_CC
	#End
	AC_OUTPUT

makefile.am dosyamızın içeriği aşağıdaki gibi olsun:

.. code-block:: makefile

	#list of programs to be installed in bin directory
	bin_PROGRAMS = hello
	#sources for targets
	hello_SOURCES = hello.c

Bu kaynak kod aşağıdaki gibi derlenir:

.. code-block:: shell

	$ autoreconf -fvi
	$ ./configure --prefix=/usr
	$ make
	$ make install

Burada configure.ac dosyamızın sırasıyla şu şekilde yazıldı.

Öncelikle **AC_INIT** kullanılarak projemizin adını ve sürümünü belirttik.
Daha sonra **AC_CONFIG_HEADERS** kullandık. Bu da ayarlamalarımızı config.h adında bir dosyaya yazmamızı sağladı. Bu dosyayı derleme sırasında kullanabiliriz.
Ardından **AC_CONFIG_AUX_DIR** kullanarak derleme dizininin konumunu tanımladık.
**AC_INIT_AUTOMAKE** kullanarak aracımızı etkinleştirdik. Burada belirtilen sürüm gereken automake sürümüdür.
**AC_CONFIG_FILES** kullanarak Makefile dosyamızı oluşturmasını sağladık.
**AC_PROG_CC** kullanarak derlyeyicimizi kontrol ettik ve son olarak **AC_OUTPUT** kullanarak işlemi tamamladık. Artık kod derlenmeye hazır.


